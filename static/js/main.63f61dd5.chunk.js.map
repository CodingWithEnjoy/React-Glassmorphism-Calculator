{"version":3,"sources":["App.js","components/ResultView.jsx","components/Keyboard.jsx","index.js"],"names":["output","history","symbols","App","useState","displayValue","state","setState","updateState","toString","onClick","id","keyType","value","lastInput","slice","functionKey","operatorKey","numberKey","resetOutput","display","calculate","includes","eval","replace","Number","isInteger","toFixed","error","className","ResultView","colorStyle","color","style","keys","class","Keyboard","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63f61dd5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport ResultView from \"./components/ResultView\";\nimport Keyboard from \"./components/Keyboard\";\n\nlet output = \"\";\nlet history = \"\";\nlet symbols = [\"*\", \"-\", \"+\", \"/\"];\n\nfunction App() {\n  const [state, setState] = useState({\n    history: \"\",\n    displayValue: \"\",\n  });\n  const updateState = () => {\n    setState({ history: history.toString(), displayValue: output.toString() });\n  };\n\n  const onClick = (id, keyType, value) => {\n    output = output.toString();\n    let lastInput = output.slice(-1);\n\n    switch (keyType) {\n      case \"function\":\n        functionKey(id, lastInput);\n        break;\n      case \"operator\":\n        operatorKey(value, lastInput);\n        break;\n      case \"number\":\n        numberKey(value, lastInput);\n        break;\n      default:\n        return;\n    }\n  };\n  const functionKey = (id, lastInput) => {\n    const resetOutput = (display) => {\n      history = \"\";\n      output = \"\";\n      display && updateState();\n    };\n    const calculate = (lastInput) => {\n      if (!symbols.includes(lastInput) && output) {\n        try {\n          history = output;\n          output = eval(output.replace(/%/g, \"*0.01\"));\n          output = Number.isInteger(output) ? output : output.toFixed(3);\n          updateState();\n          history = output;\n          output = \"\";\n        } catch (error) {\n          output = \"Error\";\n          updateState();\n          resetOutput();\n        }\n      }\n    };\n\n    switch (id) {\n      case \"clear\":\n        resetOutput(true);\n        break;\n      case \"clearBack\":\n        output = output.slice(0, -1);\n        updateState();\n        break;\n      case \"calc\":\n        calculate(lastInput);\n        break;\n      default:\n        return;\n    }\n  };\n  const operatorKey = (value, lastInput) => {\n    if (output === \"\" && value !== \"-\") {\n      return;\n    } else {\n      symbols.includes(lastInput)\n        ? (output = output.slice(0, -1) + value)\n        : (output += value);\n    }\n    updateState();\n  };\n  const numberKey = (value, lastInput) => {\n    if (value === \".\" || value === \"%\") {\n      if (output === \"\" && value === \"%\") return;\n      lastInput === \".\" || lastInput === \"%\" || (output += value);\n    } else {\n      output += value;\n    }\n    updateState();\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <ResultView history={state.history} output={state.displayValue} />\n        <Keyboard onClick={onClick} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction ResultView({ history, output }) {\n  let colorStyle = {\n    color: output === \"Error\" ? \"#f11\" : \"#fff\",\n  };\n\n  return (\n    <div style={colorStyle} className=\"result\">\n      <div className=\"history\">{history}</div>\n      <div className=\"output\">{output}</div>\n    </div>\n  );\n}\n\nResultView.propTypes = {\n  history: PropTypes.string,\n  output: PropTypes.string,\n};\n\nexport default ResultView;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst keys = [\n  { id: \"clear\", class: \"function\", value: \"C\" },\n  { id: \"clearBack\", class: \"function\", value: \"CE\" },\n  { id: \"multiply\", class: \"operator\", value: \"*\" },\n  { id: \"9\", class: \"number\", value: \"9\" },\n  { id: \"8\", class: \"number\", value: \"8\" },\n  { id: \"7\", class: \"number\", value: \"7\" },\n  { id: \"minus\", class: \"operator\", value: \"-\" },\n  { id: \"6\", class: \"number\", value: \"6\" },\n  { id: \"5\", class: \"number\", value: \"5\" },\n  { id: \"4\", class: \"number\", value: \"4\" },\n  { id: \"add\", class: \"operator\", value: \"+\" },\n  { id: \"3\", class: \"number\", value: \"3\" },\n  { id: \"2\", class: \"number\", value: \"2\" },\n  { id: \"1\", class: \"number\", value: \"1\" },\n  { id: \"divide\", class: \"operator\", value: \"/\" },\n  { id: \"dot\", class: \"number\", value: \".\" },\n  { id: \"0\", class: \"number\", value: \"0\" },\n  { id: \"%\", class: \"number\", value: \"%\" },\n  { id: \"calc\", class: \"function\", value: \"=\" },\n];\n\nfunction Keyboard({ onClick }) {\n  return (\n    <div className=\"keyboard\">\n      {keys.map((key) => (\n        <div\n          className=\"btn\"\n          id={key.id}\n          key={key.id}\n          onClick={() => onClick(key.id, key.class, key.value)}\n        >\n          {key.value}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nKeyboard.propTypes = {\n  onClick: PropTypes.func,\n};\n\nexport default Keyboard;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}